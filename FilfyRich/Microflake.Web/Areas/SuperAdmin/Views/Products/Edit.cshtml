﻿@model Microflake.Core.ViewModel.Products.EditProduct
@{
    var routeData = Request.RequestContext.RouteData;
    var AreaName = routeData.DataTokens["area"].ToString();
    var ControllerName = "/" + AreaName + "/" + routeData.Values["Controller"].ToString();
}
<style>
    textarea {
        resize: none;
    }

    #imagePreview {
        width: 100%;
    }

    #imagePreview1 {
        width: 100%;
    }

    .image-wrapper {
        position: relative;
        border-radius: 5px;
        overflow: hidden;
        width: 172px !important;
        height: 131px !important;
        overflow: hidden;
    }

        .image-wrapper:hover .select-image1 {
            visibility: visible;
            opacity: 1;
        }

    .select-image1 {
        position: absolute;
        width: 170px;
        height: 170px;
        top: 0;
        background: rgba(0,0,0,0.5);
        visibility: hidden;
        opacity: 0;
        transition: visibility 0s, opacity 0.5s linear;
        cursor: pointer;
    }

        .select-image1 i {
            font-size: 50px;
            margin: 28% 36%;
            color: #c0c0c0;
        }
    /*2nd*/

    .image-wrapper:hover .select-image {
        visibility: visible;
        opacity: 1;
    }

    .select-image {
        position: absolute;
        width: 170px;
        height: 170px;
        top: 0;
        background: rgba(0,0,0,0.5);
        visibility: hidden;
        opacity: 0;
        transition: visibility 0s, opacity 0.5s linear;
        cursor: pointer;
    }

        .select-image i {
            font-size: 50px;
            margin: 28% 36%;
            color: #c0c0c0;
        }

    .modal-dialog {
        width: 80%;
    }

    #IsHasVariation {
        display: none;
    }

    #IsVariationOverlay {
        display: none;
    }
</style>
@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "inputForm" }))
{

    @Html.AntiForgeryToken()
    @Html.HiddenFor(x => x.Id)
    @Html.HiddenFor(x => x.Status)
    @Html.HiddenFor(x => x.IsFeatured)
    @Html.HiddenFor(x => x.IsNew)
    <div class="row">
        <div class="col-md-7">


            <div class="form-group" style="margin-left:-15px;margin-right:-15px;">
                <label class="col-md-12">Name</label>
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label>@Microflake.Web.Language.Language.Price</label>
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <label>@Microflake.Web.Language.Language.SellPrice</label>
                @Html.EditorFor(model => model.SellPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SellPrice, "", new { @class = "text-danger" })
            </div>
            @*<div class="form-group">
                    <label>@Microflake.Web.Language.Language.Category</label>
                    @Html.DropDownListFor(model => model.CategoryId, null, "Select", new { @class = "form-control", required = "" })
                    @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                </div>*@
        </div>
        <div class="col-md-5">
            <div class="image-wrapper">
                <img id="imagePreview" src="@Config.Products@(Model.ProductImage)" onerror="this.src='/Public/default-image.jpg';" />
                <div class="select-image">
                    <i class="fa fa-plus"></i>
                </div>
            </div>
            <input type="file" name="Product" id="uploadProfileImage" style="display:none" />
            @Html.HiddenFor(model => model.ProductImage)
            @Html.ValidationMessageFor(model => model.ProductImage, "", new { @class = "text-danger image-error" })
            <div class="image-wrapper mt-3">
                <img id="imagePreview1" src="@Config.Products@(Model.ProductImage1)" onerror="this.src='/Public/default-image.jpg';" />
                <div class="select-image1">
                    <i class="fa fa-plus"></i>
                </div>
            </div>
            <input type="file" name="Product" class="uploadProfileImage1" style="display:none" />
            @Html.HiddenFor(model => model.ProductImage1)
            @Html.ValidationMessageFor(model => model.ProductImage1, "", new { @class = "text-danger image-error" })

        </div>
    </div>

    <div style="margin-left:-15px;margin-right:-15px;">
        <div class="form-group">
            <label class="col-md-12">@Microflake.Web.Language.Language.Category</label>
            <div class="col-md-12">
                @Html.DropDownListFor(model => model.CategoryId, null, "Select Category", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })

            </div>
        </div>

    </div>

    <div style="margin-left:-15px;margin-right:-15px;">
        <div class="form-group">
            <label class="col-md-12">Sub @Microflake.Web.Language.Language.Category</label>
            <div class="col-md-12">
                @Html.DropDownListFor(model => model.SubCategoryId, null, "Select Category", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SubCategoryId, "", new { @class = "text-danger" })

            </div>
        </div>

    </div>
    <div class="form-group">
        <label>@Microflake.Web.Language.Language.Discount</label>
        @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        <label>@Microflake.Web.Language.Language.Qty</label>
        @Html.EditorFor(model => model.Qty, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Qty, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        <label>@Microflake.Web.Language.Language.Description</label>
        @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <labels>IsHasVariation</labels>
                <div class="toggle lg">

                    <label>

                        @if (Model.IsHasVariation)
                        {

                            <input id="switch-3" type="checkbox" checked><span class="button-indecator"></span>
                        }
                        else
                        {

                            <input id="switch-3" type="checkbox"><span class="button-indecator"></span>
                        }
                        <input name="IsHasVariation" id="IsHasVariation" value="False" />
                    </label>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <labels>IsVariationOverlay</labels>
                <div class="toggle lg">

                    <label>

                        @if (Model.IsVariationOverlay)
                        {

                            <input id="switch-4" type="checkbox" checked><span class="button-indecator"></span>
                        }
                        else
                        {

                            <input id="switch-4" type="checkbox"><span class="button-indecator"></span>
                        }
                        <input name="IsVariationOverlay" id="IsVariationOverlay" value="False" />
                    </label>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <labels>@Microflake.Web.Language.Language.IsFeatured</labels>
                <div class="toggle lg">

                    <label>

                        @if (Model.IsFeatured)
                        {

                            <input id="switch-1" type="checkbox" checked><span class="button-indecator"></span>
                        }
                        else
                        {

                            <input id="switch-1" type="checkbox"><span class="button-indecator"></span>
                        }
                        <input name="IsFeatured" hidden id="IsFeatured" value="False" />
                    </label>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                <labels>@Microflake.Web.Language.Language.IsNew</labels>
                <div class="toggle lg">

                    <label>

                        @if (Model.IsNew)
                        {

                            <input id="switch-2" name="IsNew" type="checkbox" checked><span class="button-indecator"></span>
                        }
                        else
                        {

                            <input id="switch-2" name="IsNew" type="checkbox"><span class="button-indecator"></span>
                        }
                        <input name="IsNew" hidden id="IsFeatured" value="False" />
                    </label>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">

                <labels>@Microflake.Web.Language.Language.Status</labels>
                <div class="toggle lg">

                    <label>
                        @if (Model.Status)
                        {

                            <input id="switch" name="Status" type="checkbox" checked><span class="button-indecator"></span>
                        }
                        else
                        {

                            <input id="switch" name="Status" type="checkbox"><span class="button-indecator"></span>
                        }
                    </label>
                </div>
            </div>
        </div>
    </div>

}


<script>

     $("#IsFeatured").hide();
     $("#IsNew").hide();
     $("#switch-1").click(function () {
            var IsFeatured = $("#IsFeatured").val();
            if (IsFeatured == "False") {
                $("#IsFeatured").val("True");

            } else {
                $("#IsFeatured").val("False");


            }
     });

       $("#switch-2").click(function () {
            var IsNew = $("#IsNew").val();
           if (IsNew == "False")
           {
                $("#IsNew").val("True");

           }
           else {
                $("#IsNew").val("False");


           }
        });

    $("#switch-3").click(function () {
        var IsHasVariation = $("#IsHasVariation").val();

        if (IsHasVariation == "False")
        {
            $("#IsHasVariation").val("True");

            var IsVariationOverlay = $("#IsVariationOverlay").val();

            if (IsVariationOverlay == "True") {
                $("#switch-4").trigger("click");
            }

        }
        else
        {
            $("#IsHasVariation").val("False");
        }
    });

    $("#switch-4").click(function ()
    {
        var IsVariationOverlay = $("#IsVariationOverlay").val();

        if (IsVariationOverlay == "False")
        {
            $("#IsVariationOverlay").val("True");
            var IsHasVariation = $("#IsHasVariation").val();

            if (IsHasVariation == "True") {
                $("#switch-3").trigger("click");
            }
        }
        else
        {
            $("#IsVariationOverlay").val("False");
        }
    });

    $('#inputForm select').select2();

    $(".select-image").click(function () {
        $("#uploadProfileImage").trigger("click");
    });

    $("#uploadProfileImage").change(function () {
        $(".select-image").html('<i class="fa fa-spinner fa-spin"></i>');

        var profileImage = new FormData();
        var file = $(this)[0].files[0];
        profileImage.append("Product", file)

        $.ajax({
            url: "/@AreaName/Products/upload",
            type: "post",
            data: profileImage,
            contentType: false,
            processData: false,
            success: function (response) {
                if (response.status) {
                    $("#ProductImage").val(response.file);
                    $("#imagePreview").attr("src", "@Config.Products" + response.file);
                    $(".select-image").html('<i class="fa fa-plus"></i>');
                      $(".image-error").html("");
                } else {
                    $(".image-error").html(response.message);
                    $(".select-image").html('<i class="fa fa-plus"></i>');
                }
            }
        });
    });

    //2nd
     $(".select-image1").click(function () {
        $(".uploadProfileImage1").trigger("click");
    });

    $(".uploadProfileImage1").change(function ()
    {
        $(".select-image1").html('<i class="fa fa-spinner fa-spin"></i>');

        var profileImage = new FormData();
        var file = $(this)[0].files[0];
        profileImage.append("Product", file)

        $.ajax({
            url: "/@AreaName/Products/upload",
            type: "post",
            data: profileImage,
            contentType: false,
            processData: false,
            success: function (response) {
                if (response.status) {
                    $("#ProductImage1").val(response.file);
                    $("#imagePreview1").attr("src", "@Config.Products" + response.file);
                    $(".select-image1").html('<i class="fa fa-plus"></i>');
                      $(".image-error").html("");
                } else {
                    $(".image-error").html(response.message);
                    $(".select-image1").html('<i class="fa fa-plus"></i>');
                }
            }
        });
    });

    $("#CategoryId").change(function () {
        var id = $(this).val();

        $.ajax({
            url: "/@AreaName/SubCategory/ByCategoriesId/" + id,
            type: "get",
            success: function (response) {
                $("#SubCategoryId").html(response);
            }
        });
    });
</script>