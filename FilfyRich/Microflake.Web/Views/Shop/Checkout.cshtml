﻿@model Microflake.Core.ViewModel.CheckoutViewModel
@{
    ViewBag.Title = "Checkout";
   
}

<div class="main-content-wrap pt-100">
    <div class="container">

        @if (Model.Items != null && Model.Items.Count() > 0)
        {
            <div class="Checkout_section" id="accordion">
                <div class="container">
                    <div class="checkout_form">
                        <form id="payment-form" method="post">
                            <div class="row">
                                <div class="col-lg-6 col-md-6">
                                    <h3>Shipping Details</h3>
                                    <div class="row">

                                        @using (Html.BeginForm("Checkout", "Shop", FormMethod.Post, new { id = "" }))
                                        {
                                            @Html.AntiForgeryToken()
                                            @Html.HiddenFor(x => x.GrandTotal)
                                            @Html.HiddenFor(x => x.ShippingCharges)
                                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })
                                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
                                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" })
                                                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label" })
                                                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                                            </div>

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label" })
                                                @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                                            </div>

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.PostalCode, htmlAttributes: new { @class = "control-label" })
                                                @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
                                            </div>

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label" })
                                                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                            </div>
                                        }
                                    </div>
                                </div>
                                <div class="col-lg-6 col-md-6">
                                    <h3>Your order</h3>
                                    <div class="order_table table-responsive">
                                        <table>
                                            <thead>
                                                <tr>
                                                    <th>Image</th>
                                                    <th>Product</th>
                                                    <th>Total</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var item in Model.Items)
                                                {
                                                    var rate = item.Product.SellPrice;

                                                    <tr>

                                                        <td>
                                                            <img id="imagePreview" src="@Config.Products@(item.Product.Image)" style="height:100px; width:100px;" onerror="this.src='/Public/default-image.jpg';" />
                                                            @if (item.Product.IsHasVariation == true)
                                                            {
                                                                <img src="@Config.Products@(item.BackChip?.Image)" style="height:50px; width:50px;">
                                                                <img src="@Config.Products@(item.FrontChip?.Image)" style="height:50px; width:50px;">
                                                            }
                                                        </td>
                                                        <td>@item.Product.Name<strong> × @item.Count</strong></td>
                                                        <td>£ @rate</td>

                                                    </tr>
                                                }
                                            </tbody>
                                            <tfoot>
                                                <tr class="order_total">
                                                    <th>Sub Total</th>
                                                    <td></td>
                                                    @{
                                                        var Total = Model.Total ;
                                                    }
                                                    <th><strong>£ @Total</strong></th>
                                                </tr>
                                            </tfoot>
                                        </table>
                                    </div>
                                    <h3>Shipping charges</h3>
                                    <div class="payment_method">
                                        <div class="panel-default  mb-4">
                                            <input class="shipment" checked value="Standard" name="GrandTotal" type="radio" data-bs-target="createp_account">
                                            <label for="payment" data-bs-toggle="collapse" data-bs-target="#method" aria-controls="method">Standard Delivery £ 2.99</label> <br /><span style="padding-left:23px">( 2-3 working daysVia DPD/Royal Mail)</span>

                                        </div>
                                        <div class="panel-default  mb-4">
                                            <input class="shipment" value="NDay" name="GrandTotal" type="radio" data-bs-target="createp_account">
                                            <label for="payment_defult" data-bs-toggle="collapse" data-bs-target="#collapsedefult" aria-controls="collapsedefult">Next Working Day £ 4.99  </label> <br /> <span style="padding-left:23px">(DPD/Royal Mail)</span>


                                        </div>
                                        <div class="panel-default  mb-4">
                                            <input class="shipment" value="Saturday" name="GrandTotal" type="radio" data-bs-target="createp_account">
                                            <label for="payment_defult" data-bs-toggle="collapse" data-bs-target="#collapsedefult" aria-controls="collapsedefult">Saturday £ 7.99  </label> <br /><span style="padding-left:23px">(DPD/Royal Mail)</span>

                                        </div>
                                        <div class="panel-default  mb-4">
                                            <label for="payment_defult" data-bs-toggle="collapse" data-bs-target="#collapsedefult" aria-controls="collapsedefult">Free Delivery on UK Order over £ 80.00</label>

                                        </div>
                                    </div>
                                    <div class="order_table table-responsive">
                                        <table>
                                            <tfoot>
                                                <tr class="order_total" style="border-top: 1px solid #ddd; background-color:lightgray;">
                                                    <th>Grand Total</th>
                                                    <td></td>
                                                    @{
                                                        var Totals = Model.Total ;
                                                    }
                                                    <td><strong class="grandtotal">£ @Total</strong></td>
                                                </tr>


                                            </tfoot>
                                        </table>
                                    </div>

                                    <div class="payment_method">
                                        <div class="form-group">
                                            <span>
                                                <label for="country">Credit Card<span style='color:red'>*</span></label><br>
                                            </span>
                                            <div id="card-element" class="field" style="border:solid 1px #ced4da;padding: 0 10px;"></div>
                                            <div class="outcome">
                                                <div class="error"></div>
                                                <div class="success">
                                                </div>
                                            </div>
                                            @Html.ValidationMessageFor(model => model.stripeToken, "", new { @class = "text-danger" })
                                        </div>

                                        <div class="order_button" style="margin-top:20px">
                                            <button type="submit">Make Payment</button>
                                        </div>
                                        <div class="checkout_btn">
                                            <a href="/shop/Index">Continue Shopping</a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>

        }
        else
        {
            <div class="alert alert-warning mt-5" role="alert">
                Your Cart Is Empty
            </div>
        }


        <!-- checkout-area start -->
        <!-- checkout-area end -->
    </div>
</div>
<!-- jquery -->
<script src="/content/FrontEnd/js/vendor/jquery-1.12.4.min.js"></script>

@section Scripts{
    <script src="https://js.stripe.com/v3"></script>
    <script src="~/Scripts/stripe.js?v=1"></script>


    <script>
        var shipment = $(".shipment").val();
            if (shipment == "Standard") {
                $(".grandtotal").html("");
                $(".grandtotal").html("£" + parseFloat(  @Model.Total + 2.99).toFixed(2));
                $("#ShippingCharges").val(parseFloat(2.99).toFixed(2));
                $("#GrandTotal").val(parseFloat(  @Model.Total + 2.99).toFixed(2));
            } else if (shipment == "NDay") {
                $(".grandtotal").html("");
                $(".grandtotal").html("£" + parseFloat(  @Model.Total + 4.99).toFixed(2));
                $("#ShippingCharges").val(parseFloat(4.99).toFixed(2));
                $("#GrandTotal").val(parseFloat(  @Model.Total + 4.99).toFixed(2));
            } else if (shipment == "Saturday") {
                $(".grandtotal").html("");
                $(".grandtotal").html("£" + parseFloat(  @Model.Total + 7.99).toFixed(2));
                $("#ShippingCharges").val(parseFloat(7.99).toFixed(2));
                $("#GrandTotal").val(parseFloat(  @Model.Total + 7.99).toFixed(2));
        }
        $(".shipment").click(function () {
            var shipment = $(this).val();
            if (shipment == "Standard") {
                $(".grandtotal").html("");
                $(".grandtotal").html("£" + parseFloat(  @Model.Total + 2.99).toFixed(2));
                $("#ShippingCharges").val(parseFloat(2.99).toFixed(2));
                $("#GrandTotal").val(parseFloat(  @Model.Total + 2.99).toFixed(2));
            } else if (shipment == "NDay") {
                $(".grandtotal").html("");
                $(".grandtotal").html("£" + parseFloat(  @Model.Total + 4.99).toFixed(2));
                $("#ShippingCharges").val(parseFloat(4.99).toFixed(2));
                $("#GrandTotal").val(parseFloat(  @Model.Total + 4.99).toFixed(2));
            } else if (shipment == "Saturday") {
                $(".grandtotal").html("");
                $(".grandtotal").html("£" + parseFloat(  @Model.Total + 7.99).toFixed(2));
                $("#ShippingCharges").val(parseFloat(7.99).toFixed(2));
                $("#GrandTotal").val(parseFloat(  @Model.Total + 7.99).toFixed(2));
            }
        });

        $("#Submitform").submit(function (event) {
            event.preventDefault();
            debugger
            $.ajax({
                type: "Post",
                url: '/Shop/Checkout',
                data: $("#Submitform").serialize()

            }).done(
                function (responce) {
                    debugger;
                    if (responce.status == true) {
                        //$(".signup-popup-box").css({"display":"none"});
                        $.cookie('ShoppingCart', '', { path: '/' });
                        //updateCartProducts();

                        Swal.fire(
                            {
                                icon: 'success',
                                title: '',
                                text: 'Varification Email has been sent to your account please check',
                            });

                    } else {
                        debugger;
                        for (var i = 0; i < responce.errors.length; i++) {
                            $("[data-valmsg-for='" + responce.errors[i].Key + "']").html(responce.errors[i].Errors[0]);
                        }
                    }
                })
                .debugger(function (XMLHttpRequest, textStatus, errorThrown) {
                    alert("F");
                });
        });
    </script>
}