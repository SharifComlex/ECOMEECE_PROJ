﻿@model Microflake.Core.ViewModel.CheckoutViewModel
@{
    ViewBag.Title = "Checkout";
    Layout = "~/Views/Shared/_Layout2.cshtml";
}

<div class="main-content-wrap pt-100">
    <div class="container">

        @if (Model.Items != null && Model.Items.Count() > 0)
        {
            <div class="Checkout_section" id="accordion">
                <div class="container">
                    <div class="checkout_form">
                        <div class="row">
                            <div class="col-lg-6 col-md-6">
                                <form action="#">
                                    <h3>Billing Details</h3>
                                    <div class="row">
                                       
                                        @using (Html.BeginForm("Checkout", "Shop", FormMethod.Post, new { id = "" }))
                                        {
                                            @Html.AntiForgeryToken()
                                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })
                                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
                                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" })
                                                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label" })
                                                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                                            </div>

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label" })
                                                @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label" })
                                                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                            </div>


                                               <div class="col-md-12 order_button m-2" >
                                                   <button type="submit">Submit</button>
                                                   </div> 
                                          
                                        }
                                    </div>

                                </form>
                            </div>
                            <div class="col-lg-6 col-md-6">
                                <form action="#">
                                    <h3>Your order</h3>
                                    <div class="order_table table-responsive">
                                        <table>
                                            <thead>
                                                <tr>
                                                    <th>Image</th>
                                                    <th>Product</th>
                                                    <th>Total</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var item in Model.Items)
                                                {
                                                    var rate = item.Product.SellPrice * ViewBag.Currency;

                                            <tr >

                                                <td >
                                                        <img id="imagePreview" src="@Config.Products@(item.Product.Image)" style="height:100px; width:100px;" onerror="this.src='/Public/default-image.jpg';" />
                                                   
                                                </td>
                                                <td>@item.Product.Name<strong> × @item.Count</strong></td>
                                                <td>@ViewBag.CurrencySimbal @rate</td>

                                            </tr>
                                                }
                                            </tbody>
                                            <tfoot>
                                                @*<tr>
                                                    <th>Cart Subtotal</th>
                                                    <td>$215.00</td>
                                                </tr>
                                                <tr>
                                                    <th>Shipping</th>
                                                    <td><strong>$5.00</strong></td>
                                                </tr>*@
                                                <tr class="order_total">
                                                    <th>Order Total</th> 
                                                    @{
                                                        var Total = Model.Total * ViewBag.Currency;
                                                    }
                                                    <td><strong>@Total</strong></td>
                                                </tr>
                                            </tfoot>
                                        </table>
                                    </div>
                                    <div class="payment_method">
                                        <div class="panel-default">
                                            <input id="payment" name="check_method" type="radio" data-bs-target="createp_account">
                                            <label for="payment" data-bs-toggle="collapse" data-bs-target="#method" aria-controls="method">Create an account?</label>

                                            <div id="method" class="collapse one" data-parent="#accordion">
                                                <div class="card-body1">
                                                    <p>Please send a check to Store Name, Store Street, Store Town, Store State / County, Store Postcode.</p>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="panel-default">
                                            <input id="payment_defult" name="check_method" type="radio" data-bs-target="createp_account">
                                            <label for="payment_defult" data-bs-toggle="collapse" data-bs-target="#collapsedefult" aria-controls="collapsedefult">PayPal <img src="~/FrontWeb/assets/img/icon/papyel.png" alt=""></label>

                                            <div id="collapsedefult" class="collapse one" data-parent="#accordion">
                                                <div class="card-body1">
                                                    <p>Pay via PayPal; you can pay with your credit card if you don’t have a PayPal account.</p>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="order_button">
                                            <button type="submit">Proceed to PayPal</button>
                                        </div>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        }
        else
        {
            <div class="alert alert-warning mt-5" role="alert">
                Your Cart Is Empty
            </div>
        }


        <!-- checkout-area start -->
        <!-- checkout-area end -->
    </div>
</div>
  <!-- jquery -->
    <script src="/content/FrontEnd/js/vendor/jquery-1.12.4.min.js"></script>
   
@section Scripts{
<script>
    $("#Submitform").submit(function (event) {
        event.preventDefault();
        debugger
        $.ajax({
            type: "Post",
            url: '/Shop/Checkout',
            data: $("#Submitform").serialize()

        }).done(
            function (responce) {
                debugger;
                if (responce.status == true) {
                    //$(".signup-popup-box").css({"display":"none"});
                    $.cookie('ShoppingCart', '', { path: '/' });
                    updateCartProducts();

                    Swal.fire(
                        {
                            icon: 'success',
                            title: '',
                            text: 'Varification Email has been sent to your account please check',
                        });

                } else {
                    debugger;
                    for (var i = 0; i < responce.errors.length; i++) {
                        $("[data-valmsg-for='" + responce.errors[i].Key + "']").html(responce.errors[i].Errors[0]);
                    }
                    //Swal.fire(
                    //    {
                    //        icon: 'error',
                    //        title: 'Oops...',
                    //        text: responce.Message,
                    //    });

                }
            })
            .debugger(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("F");
            });
    });
</script>}