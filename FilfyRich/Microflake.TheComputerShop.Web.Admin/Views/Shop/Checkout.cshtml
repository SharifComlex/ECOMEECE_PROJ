﻿@model Microflake.TheComputerShop.ViewModel.CheckoutViewModel

@{
    ViewBag.Title = "Checkout";
    Layout = "~/Views/Shared/_FrontEndLayout.cshtml";
}
<div class="breadcrumb-area ptb-30 bg-gray">
    <div class="container">
        <div class="row">
            <div class="col">
                <ul class="breadcrumb-list">
                    <li class="breadcrumb-item"><a href="#">Home</a></li>
                    <li class="breadcrumb-item active">Checkout</li>
                </ul>
            </div>
        </div>
    </div>
</div>
<div class="main-content-wrap pt-100">
    <div class="container">
        @if (User.Identity.IsAuthenticated)
        {
            if (Model.Items != null && Model.Items.Count() > 0)
            {
                <div class="checkout-area">
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="row">
                                <div class="col-lg-6 col-sm-12">
                                    @using (Html.BeginForm("Checkout", "Shop", FormMethod.Post, new { id = "" }))
                                    {
                                        @Html.AntiForgeryToken()
                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @required = true ,@readonly = true} })
                                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @required = true ,@readonly = true} })
                                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @required = true ,@readonly = true} })
                                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", @required = true ,@readonly = true} })
                                            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                                        </div>
                                      
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control", @required = true,@readonly = true } })
                                            @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", @required = true,@readonly = true } })
                                            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @required = true ,@readonly = true } })
                                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                        </div>


                                        <button class="btn btn-danger" type="submit"> Submit</button>

                                    }

                                </div>
                                <div class="col-lg-6 col-sm-12">
                                    <div class="checkout-review-order mt-30 ">
                                        <form action="#">
                                            <h3 class="shoping-checkboxt-title">Your order</h3>
                                            <table class="checkout-review-order-table">
                                                <thead>
                                                    <tr>
                                                        <th class="plantmore-product-thumbnail">images</th>

                                                        <th class="t-product-name">Product</th>
                                                        <th class="product-total">Price</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @foreach (var item in Model.Items)
                                                    {
                                                        var rate = item.Product.SellPrice * ViewBag.Currency;

                                                        <tr class="cart_item">

                                                            <td class="plantmore-product-thumbnail">
                                                                <a href="#">
                                                                    <img id="imagePreview" src="@Config.Products@(item.Product.Image)" style="height:100px; width:100px;" onerror="this.src='/Public/default-image.jpg';" />
                                                                </a>
                                                            </td>
                                                            <td class="t-product-name">@item.Product.Title<strong class="product-quantity"> ×  @item.Count</strong></td>
                                                            <td class="t-product-price"><span>@ViewBag.CurrencySimbal @rate </span></td>

                                                        </tr>
                                                    }
                                                </tbody>
                                                <tfoot>
                                                    @*<tr class="cart-subtotal">
                                                        <th>Subtotal</th>
                                                        <td><span>@Model.Total</span></td>
                                                    </tr>*@
                                                    <tr class="shipping">
                                                        <th>Shipping</th>
                                                        <td>Free shipping</td>
                                                    </tr>
                                                    <tr class="order-total">
                                                        <th>Total</th>
                                                        @{
                                                            var Total = Model.Total * ViewBag.Currency;
                                                        }
                                                        <td><strong><span>  @Total</span></strong></td>
                                                    </tr>
                                                </tfoot>
                                            </table>
                                            <div class="checkout-payment">
                                                <div class="payment_methods">
                                                    <p><label>PayPal Express Checkout <a href="#"><img src="img/icon/pp-acceptance-small.png" alt=""></a></label></p>
                                                    <p>Pay via PayPal; you can pay with your credit card if you don’t have a PayPal account.</p>
                                                </div>
                                                <button style="background-color:#9d4d4a; color:white;" class="button-continue-payment" type="submit">Continue to payment</button>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="alert alert-warning mt-5" role="alert">
                    Your Cart Is Empty
                </div>
            }
        }
        else
        {
            <div class="alert alert-warning mt-5" role="alert">
                Please Login To Checkout
            </div>
        }

        <!-- checkout-area start -->
        <!-- checkout-area end -->
    </div>
</div>
  <!-- jquery -->
    <script src="/content/FrontEnd/js/vendor/jquery-1.12.4.min.js"></script>
   
@section Scripts{
<script>
    $("#Submitform").submit(function (event) {
        event.preventDefault();
        debugger
        $.ajax({
            type: "Post",
            url: '/Shop/Checkout',
            data: $("#Submitform").serialize()

        }).done(
            function (responce) {
                debugger;
                if (responce.status == true) {
                    //$(".signup-popup-box").css({"display":"none"});
                    $.cookie('ShoppingCart', '', { path: '/' });
                    updateCartProducts();

                    Swal.fire(
                        {
                            icon: 'success',
                            title: '',
                            text: 'Varification Email has been sent to your account please check',
                        });

                } else {
                    debugger;
                    for (var i = 0; i < responce.errors.length; i++) {
                        $("[data-valmsg-for='" + responce.errors[i].Key + "']").html(responce.errors[i].Errors[0]);
                    }
                    //Swal.fire(
                    //    {
                    //        icon: 'error',
                    //        title: 'Oops...',
                    //        text: responce.Message,
                    //    });

                }
            })
            .debugger(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("F");
            });
    });
</script>}